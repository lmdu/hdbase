# Generated by Django 5.1.7 on 2025-06-25 04:27

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hdbase', '0011_alter_cardiomyopathygenemutation_acmg_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='cardiomyopathygenemutation',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cardiomyopathygenemutation',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='cardiomyopathygenemutation',
            name='jbmc',
            field=models.CharField(blank=True, default='', help_text='疾病名称', max_length=80),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='bqdk',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='丙球抵抗'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='cqlx',
            field=models.PositiveSmallIntegerField(choices=[(0, '未知'), (1, '不完全')], default=0, help_text='川崎类型'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='cqxk',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='川崎休克'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='cznl',
            field=models.FloatField(blank=True, help_text='初诊年龄', null=True),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='fr5ksszlwx',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='发热5天以上，抗生素治疗无效'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='fufa',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='复发'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='gmsh',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='冠脉损害'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='jblbjzd',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='颈部淋巴结肿大'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='jmcx',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='结膜充血'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='kcgb',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='口唇改变'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='kjjzhz',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='卡介苗接种部位红肿硬结'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='pizhen',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='皮疹'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='sfcjbb',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='是否采集标本'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='sjbb',
            field=models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '全血'), (2, '血细胞'), (3, '血浆'), (4, '组织')], default=0, help_text='已送检标本'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='sybb',
            field=models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '全血'), (2, '血细胞'), (3, '血浆'), (4, '组织')], default=0, help_text='剩余标本'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='xjgs',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='心肌梗死'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='yms',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='杨梅舌'),
        ),
        migrations.AddField(
            model_name='kawasakidisease',
            name='zdyj',
            field=models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是'), (2, '-')], default=0, help_text='肢端硬结/掌趾红斑'),
        ),
        migrations.AlterField(
            model_name='cardiomyopathygenemutation',
            name='disease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease'),
        ),
        migrations.CreateModel(
            name='KawasakiBiochemistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt', models.FloatField(blank=True, help_text='ALT', null=True)),
                ('ast', models.FloatField(blank=True, help_text='AST', null=True)),
                ('tb', models.FloatField(blank=True, help_text='TB', null=True)),
                ('dbil', models.FloatField(blank=True, help_text='DBIL', null=True)),
                ('idil', models.FloatField(blank=True, help_text='IDIL', null=True)),
                ('alb', models.FloatField(blank=True, help_text='ALB', null=True)),
                ('glb', models.FloatField(blank=True, help_text='GLB', null=True)),
                ('rgt', models.FloatField(blank=True, help_text='γ-GT', null=True)),
                ('ldh', models.FloatField(blank=True, help_text='LDH', null=True)),
                ('pa', models.FloatField(blank=True, help_text='PA', null=True)),
                ('alp', models.FloatField(blank=True, help_text='ALP', null=True)),
                ('un', models.FloatField(blank=True, help_text='UN', null=True)),
                ('jg', models.FloatField(blank=True, help_text='肌酐', null=True)),
                ('cysc', models.FloatField(blank=True, help_text='CYSC', null=True)),
                ('ua', models.FloatField(blank=True, help_text='UA', null=True)),
                ('p', models.FloatField(blank=True, help_text='P', null=True)),
                ('k', models.FloatField(blank=True, help_text='K+', null=True)),
                ('na', models.FloatField(blank=True, help_text='Na+', null=True)),
                ('cl', models.FloatField(blank=True, help_text='Cl-', null=True)),
                ('ca', models.FloatField(blank=True, help_text='Ca2+', null=True)),
                ('mg', models.FloatField(blank=True, help_text='Mg2+', null=True)),
                ('tc', models.FloatField(blank=True, help_text='TC', null=True)),
                ('tg', models.FloatField(blank=True, help_text='TG', null=True)),
                ('hdlc', models.FloatField(blank=True, help_text='HDLC', null=True)),
                ('ldlc', models.FloatField(blank=True, help_text='LDLC', null=True)),
                ('apoa', models.FloatField(blank=True, help_text='Apoa', null=True)),
                ('apob', models.FloatField(blank=True, help_text='Apob', null=True)),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochems', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiBlood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xcg', models.CharField(blank=True, default='', help_text='血常规', max_length=80, null=True)),
                ('frsj', models.CharField(blank=True, default='', help_text='距离发热xx时间', max_length=30, null=True)),
                ('wbc', models.FloatField(blank=True, help_text='WBC', null=True)),
                ('np', models.FloatField(blank=True, help_text='N%', null=True)),
                ('lp', models.FloatField(blank=True, help_text='L%', null=True)),
                ('monop', models.FloatField(blank=True, help_text='MONO%', null=True)),
                ('lym', models.FloatField(blank=True, help_text='Lym', null=True)),
                ('mono', models.FloatField(blank=True, help_text='MONO(单核细胞绝对值)', null=True)),
                ('anc', models.FloatField(blank=True, help_text='ANC', null=True)),
                ('rbc', models.FloatField(blank=True, help_text='RBC', null=True)),
                ('hgb', models.FloatField(blank=True, help_text='HGB', null=True)),
                ('plt', models.FloatField(blank=True, help_text='PLT', null=True)),
                ('hct', models.FloatField(blank=True, help_text='HCT', null=True)),
                ('rdwc', models.FloatField(blank=True, help_text='RDWC', null=True)),
                ('rdwsd', models.FloatField(blank=True, help_text='RDWSD', null=True)),
                ('pdw', models.FloatField(blank=True, help_text='PDW', null=True)),
                ('mpv', models.FloatField(blank=True, help_text='MPV', null=True)),
                ('plcr', models.FloatField(blank=True, help_text='PLCR', null=True)),
                ('pctp', models.FloatField(blank=True, help_text='PCT%', null=True)),
                ('crp', models.FloatField(blank=True, help_text='CRP', null=True)),
                ('esr', models.FloatField(blank=True, help_text='ESR', null=True)),
                ('jgsy', models.FloatField(blank=True, help_text='降钙素原', null=True)),
                ('saa', models.FloatField(blank=True, help_text='SAA', null=True)),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloods', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiCardiacPhenotype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sfyxhxtzz', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='是否有消化系统症状')),
                ('outu', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='呕吐')),
                ('ftjzbs', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='腹痛/脐周不适')),
                ('gy', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='肝炎')),
                ('hd', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='黄疸')),
                ('dlzd', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='胆囊肿大')),
                ('yxy', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='胰腺炎')),
                ('xhxtqtbx', models.CharField(blank=True, default='', help_text='消化系统其他表现', max_length=200, null=True)),
                ('sjxtzz', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='神经系统症状')),
                ('jz', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='惊厥')),
                ('cc', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='抽搐')),
                ('jr', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='激惹')),
                ('ss', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='嗜睡')),
                ('tt', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='头痛')),
                ('pt', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='偏瘫')),
                ('tssjsh', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='听视神经损害')),
                ('qlpl', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='前囟膨隆')),
                ('ngs', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='脑梗塞')),
                ('ncx', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='脑出血')),
                ('sw', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='神萎')),
                ('sjxtqtbx', models.CharField(blank=True, default='', help_text='神经系统其他表现', max_length=200, null=True)),
                ('sfyhxxtbx', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='是否有呼吸系统表现')),
                ('ks', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='咳嗽')),
                ('hxxtqtbx', models.CharField(blank=True, default='', help_text='呼吸系统其他表现', max_length=200, null=True)),
                ('sfyjrxtbx', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='是否有肌肉系统表现')),
                ('gjy', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='关节炎')),
                ('gjtt', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='关节疼痛')),
                ('hzgjtw', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='寰椎关节脱位')),
                ('jbhdsx', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='颈部活动受限')),
                ('jrxtqtbx', models.CharField(blank=True, default='', help_text='肌肉系统其他表现', max_length=200, null=True)),
                ('sfymnxtbx', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='是否有泌尿生殖系统表现')),
                ('yljs', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='阴囊积水')),
                ('ndy', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='尿道炎')),
                ('ndky', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='尿道口炎')),
                ('ndxtqtbx', models.CharField(blank=True, default='', help_text='泌尿生殖系统其他表现', max_length=200, null=True)),
                ('sfyqtxtbx', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='是否有其他系统表现')),
                ('qtxtjtbx', models.CharField(blank=True, default='', help_text='其他系统具体表现', max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cardiacs', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiGeneReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, default='', help_text='检测公司', max_length=100)),
                ('report', models.FileField(blank=True, help_text='报告', null=True, upload_to='report/%Y/%m/')),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiGeneMutation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(blank=True, default='', help_text='基因', max_length=50)),
                ('position', models.CharField(blank=True, default='', help_text='位置', max_length=50)),
                ('mutation', models.CharField(blank=True, default='', help_text='突变信息', max_length=80)),
                ('gnomad', models.CharField(blank=True, default='', help_text='gnomAD MAF', max_length=30)),
                ('acmg', models.CharField(blank=True, default='', help_text='ACMG变异评级', max_length=30)),
                ('disease', models.CharField(blank=True, default='', help_text='疾病名称', max_length=80)),
                ('gmode', models.CharField(blank=True, default='', help_text='遗传模式', max_length=20)),
                ('zygote', models.CharField(blank=True, default='', help_text='合子类型', max_length=100)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genes', to='hdbase.kawasakigenereport')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiMarker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt', models.FloatField(blank=True, help_text='PT', null=True)),
                ('aptt', models.FloatField(blank=True, help_text='APTT', null=True)),
                ('fg', models.FloatField(blank=True, help_text='Fg', null=True)),
                ('tt', models.FloatField(blank=True, help_text='TT', null=True)),
                ('ddi', models.FloatField(blank=True, help_text='DDI', null=True)),
                ('fdp', models.FloatField(blank=True, help_text='FDP', null=True)),
                ('atiii', models.FloatField(blank=True, help_text='ATIII', null=True)),
                ('inr', models.FloatField(blank=True, help_text='INR', null=True)),
                ('ctni', models.FloatField(blank=True, help_text='cTni', null=True)),
                ('mb', models.FloatField(blank=True, help_text='Mb', null=True)),
                ('ntbnp', models.FloatField(blank=True, help_text='NT-BNP', null=True)),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markers', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiMedimage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yxlx', models.PositiveSmallIntegerField(choices=[(1, 'MRI'), (3, 'CTA'), (2, '冠脉造影'), (0, '其他')], default=1, help_text='影像类型')),
                ('code', models.CharField(blank=True, default='', help_text='影像号', max_length=20)),
                ('zd', models.CharField(blank=True, default='', help_text='诊断', max_length=200)),
                ('report', models.FileField(blank=True, help_text='报告文件', max_length=200, null=True, upload_to='report/%Y/%m/')),
                ('dicom_file', models.FileField(blank=True, help_text='影像文件', max_length=255, null=True, upload_to='dicom/%Y/%m/')),
                ('dicom_uuid', models.CharField(blank=True, default='', max_length=50)),
                ('tested', models.DateField(blank=True, help_text='检查时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medimages', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiOtherExamine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('njyjc', models.PositiveSmallIntegerField(choices=[(0, '未做'), (1, '正常'), (2, '不正常')], default=0, help_text='脑脊液检查')),
                ('njydbz', models.FloatField(blank=True, help_text='脑脊液蛋白质', null=True)),
                ('njyt', models.FloatField(blank=True, help_text='脑脊液糖', null=True)),
                ('njylhw', models.FloatField(blank=True, help_text='脑脊液氯化物', null=True)),
                ('rxjj', models.PositiveSmallIntegerField(choices=[(0, '未做'), (1, '正常'), (2, '不正常')], default=0, help_text='溶血检查')),
                ('krqdbss', models.PositiveSmallIntegerField(choices=[(0, '阴性'), (1, '阳性')], default=0, help_text='直接抗人球蛋白试验')),
                ('wzhxb', models.FloatField(blank=True, help_text='网织红细胞(%)', null=True)),
                ('dbcg', models.PositiveSmallIntegerField(choices=[(0, '未做'), (1, '正常'), (2, '不正常')], default=0, help_text='大便常规')),
                ('dbbxb', models.CharField(blank=True, default='', help_text='大便白细胞/hp', max_length=20, null=True)),
                ('dbhxb', models.CharField(blank=True, default='', help_text='大便红细胞/hp', max_length=20, null=True)),
                ('dbnxb', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='大便脓细胞/hp')),
                ('xbcg', models.PositiveSmallIntegerField(choices=[(0, '未做'), (1, '正常'), (2, '不正常')], default=0, help_text='小便常规')),
                ('xbndb', models.FloatField(blank=True, help_text='小便尿蛋白', null=True)),
                ('xbbxb', models.CharField(blank=True, default='', help_text='小便白细胞/hp', max_length=20, null=True)),
                ('xbhxb', models.CharField(blank=True, default='', help_text='小便红细胞/hp', max_length=20, null=True)),
                ('xbnxb', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='小便脓细胞/hp')),
                ('xdt', models.PositiveSmallIntegerField(choices=[(0, '未做'), (1, '正常'), (2, '不正常')], default=0, help_text='心电图')),
                ('xdtbx', models.CharField(blank=True, default='', help_text='心电图具体表现', max_length=255, null=True)),
                ('xp', models.PositiveSmallIntegerField(choices=[(0, '未做'), (1, '正常'), (2, '不正常')], default=0, help_text='胸片')),
                ('xpbx', models.CharField(blank=True, default='', help_text='胸片具体表现', max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examines', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dyivigdd', models.PositiveSmallIntegerField(choices=[(1, '心血管科住院'), (2, '急诊'), (3, '门诊或其他住院部科室'), (4, '外院')], default=1, help_text='第一次IVIG使用地点')),
                ('dyivigsj', models.CharField(blank=True, default='', help_text='第一次IVIG使用时间', max_length=20, null=True)),
                ('dycivig', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='第一次IVIG')),
                ('dycjl', models.FloatField(blank=True, help_text='第一次剂量(g/kg)', null=True)),
                ('ksszhtrsj', models.CharField(blank=True, default='', help_text='开始输注后退热时间', max_length=20, null=True)),
                ('decivig', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='第二次IVIG')),
                ('decjl', models.FloatField(blank=True, help_text='第二次剂量(g/kg)', null=True)),
                ('sfsyjs', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='是否使用激素')),
                ('jszl', models.CharField(blank=True, default='', help_text='激素种类', max_length=30, null=True)),
                ('syjslfrdj', models.CharField(blank=True, default='', help_text='使用激素，离发热多久', max_length=20, null=True)),
                ('jsyf', models.CharField(blank=True, default='', help_text='激素用法', max_length=30, null=True)),
                ('jsyl', models.FloatField(blank=True, help_text='激素用量(mg/kg)', null=True)),
                ('sfsyaspl', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='是否使用阿司匹林')),
                ('syasplfrdj', models.CharField(blank=True, default='', help_text='使用阿司匹林，离发热多久', max_length=20, null=True)),
                ('aspljl', models.PositiveSmallIntegerField(choices=[(0, '未使用'), (1, '小3-10mg/kg/d'), (2, '大30-50')], default=0, help_text='阿司匹林剂量')),
                ('aspltrsj', models.CharField(blank=True, default='', help_text='阿司匹林使用后退热时间', max_length=20, null=True)),
                ('asplivigsx', models.PositiveSmallIntegerField(choices=[(0, '未知'), (1, '同时'), (2, 'IVIG在前'), (3, 'IVIG在后')], default=0, help_text='阿司匹林和IVIG使用顺序')),
                ('klzl', models.PositiveSmallIntegerField(choices=[(0, '未知'), (1, '阿司匹林'), (2, '潘生丁(双嘧达莫)'), (3, '氯吡格雷'), (4, '华法林'), (5, '低分子肝素')], default=0, help_text='抗凝治疗')),
                ('qtzlfa', models.CharField(blank=True, default='', help_text='其他治疗方案', max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treats', to='hdbase.kawasakidisease')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiUltrasound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', help_text='超声号', max_length=20)),
                ('lfrjt', models.FloatField(blank=True, help_text='离发热几天', null=True)),
                ('jtzk', models.PositiveSmallIntegerField(choices=[(0, '未知'), (1, '正常'), (2, '不正常')], default=1, help_text='具体状况')),
                ('efp', models.FloatField(blank=True, help_text='EF(%)', null=True)),
                ('xbjy', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='心包积液')),
                ('xzzd', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='心脏长大')),
                ('bmfl', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='瓣膜返流')),
                ('gmkz', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='冠脉扩张')),
                ('gmxs', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='冠脉血栓')),
                ('gml', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='冠脉瘤')),
                ('lca', models.FloatField(blank=True, help_text='LCA', null=True)),
                ('lad', models.FloatField(blank=True, help_text='LAD', null=True)),
                ('lcx', models.FloatField(blank=True, help_text='LCX', null=True)),
                ('rca', models.FloatField(blank=True, help_text='RCA', null=True)),
                ('zdms', models.CharField(blank=True, default='', help_text='诊断描述', max_length=200, null=True)),
                ('report', models.FileField(blank=True, help_text='报告文件', max_length=200, null=True, upload_to='report/%Y/%m/')),
                ('dicom_file', models.FileField(blank=True, help_text='影像文件', max_length=255, null=True, upload_to='dicom/%Y/%m/')),
                ('dicom_uuid', models.CharField(blank=True, default='', max_length=50)),
                ('tested', models.DateField(blank=True, help_text='检查时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ultrasounds', to='hdbase.kawasakidisease')),
            ],
        ),
    ]
