# Generated by Django 5.1.7 on 2025-06-13 02:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hdbase', '0006_job_delete_task'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='patient',
            name='age',
        ),
        migrations.AddField(
            model_name='patient',
            name='birthday',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='platform',
            field=models.PositiveSmallIntegerField(choices=[(1, 'ILLUMINA'), (2, 'DNBSEQ'), (3, 'PACBIO'), (4, 'ONT'), (5, 'CAPILLARY'), (6, 'ELEMENT'), (7, 'HELICOS'), (8, 'IONTORRENT'), (9, 'LS454'), (10, 'SINGULAR'), (11, 'SOLID'), (12, 'ULTIMA'), (0, 'UNKNOWN')], default=0),
        ),
        migrations.CreateModel(
            name='CardiomyopathyDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_code', models.CharField(blank=True, default='', help_text='编号或测序编号', max_length=100)),
                ('body_surface', models.FloatField(blank=True, help_text='体表面积', null=True)),
                ('disease_type', models.CharField(blank=True, default='', help_text='心肌病分型', max_length=100)),
                ('mutate_gene', models.CharField(blank=True, default='', help_text='突变基因', max_length=20)),
                ('diagnose_age', models.FloatField(blank=True, help_text='初诊年龄', null=True)),
                ('has_history', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '有')], default=0, help_text='有无家族史')),
                ('family_history', models.CharField(blank=True, default='', help_text='家族史情况', max_length=100)),
                ('complication', models.PositiveSmallIntegerField(choices=[(0, '没有'), (1, '瓣膜病变'), (2, '冠脉狭窄/异常'), (3, '冠脉损害'), (4, '结构异常'), (5, '心肌炎后'), (6, '心肌梗死')], default=0, help_text='合并症')),
                ('heart_failure', models.CharField(blank=True, default='', help_text='心衰评分', max_length=20)),
                ('is_survival', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=1, help_text='是否存活')),
                ('death_time', models.DateField(blank=True, help_text='死亡时间', null=True)),
                ('arrhythmia_type', models.CharField(blank=True, default='', help_text='心律失常类型', max_length=100)),
                ('special_treatment', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '起搏器'), (2, '射频'), (3, '心脏移植')], default=0, help_text='特殊治疗')),
                ('hospital_visits', models.SmallIntegerField(default=0, help_text='心衰再入院次数')),
                ('follow_time', models.DateField(blank=True, help_text='随访时间', null=True)),
                ('sample_collect', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='是否采集标本')),
                ('test_sample', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '全血'), (2, '血细胞'), (3, '血浆'), (4, '组织')], default=0, help_text='已送检标本')),
                ('remain_sample', models.PositiveSmallIntegerField(choices=[(0, '无'), (1, '全血'), (2, '血细胞'), (3, '血浆'), (4, '组织')], default=0, help_text='剩余标本')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.patient')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='CardiomyopathyBloodRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wbc', models.FloatField(blank=True, help_text='WBC (×10^9/L)', null=True)),
                ('hgb', models.FloatField(blank=True, help_text='HGB (g/L)', null=True)),
                ('hct', models.FloatField(blank=True, help_text='HCT (%)', null=True)),
                ('mcv', models.FloatField(blank=True, help_text='MCV (fl)', null=True)),
                ('mch', models.FloatField(blank=True, help_text='MCH (pg)', null=True)),
                ('mchc', models.FloatField(blank=True, help_text='MCHC (g/L)', null=True)),
                ('rdw', models.FloatField(blank=True, help_text='RDW (fl)', null=True)),
                ('crp', models.FloatField(blank=True, help_text='CRP/hs-CRP (mg/L)', null=True)),
                ('alt', models.CharField(blank=True, default='', help_text='ALT (U/L)', max_length=10)),
                ('ast', models.FloatField(blank=True, help_text='AST (U/L)', null=True)),
                ('alb', models.FloatField(blank=True, help_text='ALB (g/L)', null=True)),
                ('cr', models.FloatField(blank=True, help_text='Cr (umol/L)', null=True)),
                ('tc', models.FloatField(blank=True, help_text='TC (mmol/L)', null=True)),
                ('tg', models.FloatField(blank=True, help_text='TG (mmol/L)', null=True)),
                ('hdlc', models.FloatField(blank=True, help_text='HDL-C (mmol/L)', null=True)),
                ('ldlc', models.FloatField(blank=True, help_text='LDL-C (mmol/L)', null=True)),
                ('apoa', models.FloatField(blank=True, help_text='APO-A1 (g/L)', null=True)),
                ('apob', models.FloatField(blank=True, help_text='APO-B (g/L)', null=True)),
                ('glu', models.FloatField(blank=True, help_text='GLU (mmol/L)', null=True)),
                ('rheumatism', models.PositiveSmallIntegerField(choices=[(0, '阴性'), (1, '阳性')], default=0, help_text='风湿筛查')),
                ('autoantibody', models.PositiveSmallIntegerField(choices=[(0, '阴性'), (1, '阳性')], default=0, help_text='自身抗体')),
                ('positive_result', models.CharField(blank=True, default='', help_text='阳性结果', max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease')),
            ],
        ),
        migrations.CreateModel(
            name='CardiomyopathyECG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.FloatField(blank=True, help_text='年龄', null=True)),
                ('stt', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='ST-T改变')),
                ('cdzz', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='传导阻滞')),
                ('xfcd', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='心房颤动')),
                ('sxzb', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='室性早搏')),
                ('fxzb', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='房性早搏')),
                ('zsfd', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='左室肥大')),
                ('zffd', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='左房肥大')),
                ('ycqb', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='异常Q波')),
                ('dxdgh', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='窦性心动过缓')),
                ('dxdgs', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='窦性心动过速')),
                ('fxdgs', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='房性心动过速')),
                ('sxdgs', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='室性心动过速')),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease')),
            ],
        ),
        migrations.CreateModel(
            name='CardiomyopathyGeneReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, default='', help_text='检测公司', max_length=100)),
                ('report', models.FileField(blank=True, help_text='报告', null=True, upload_to='report/%Y/%m/')),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease')),
            ],
        ),
        migrations.CreateModel(
            name='CardiomyopathyGeneMutation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(blank=True, default='', help_text='基因', max_length=50)),
                ('position', models.CharField(blank=True, default='', help_text='位置', max_length=50)),
                ('mutation', models.FloatField(blank=True, default='', help_text='突变', max_length=80)),
                ('gnomad', models.CharField(blank=True, default='', help_text='gnomAD MAF', max_length=30)),
                ('acmg', models.CharField(blank=True, default='', help_text='ACMG', max_length=30)),
                ('disease', models.CharField(blank=True, default='', help_text='疾病名称', max_length=80)),
                ('gmode', models.CharField(blank=True, default='', help_text='遗传模式', max_length=10)),
                ('zygote', models.CharField(blank=True, default='', help_text='合子类型', max_length=100)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathygenereport')),
            ],
        ),
        migrations.CreateModel(
            name='CardiomyopathyMarker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ckmb', models.FloatField(blank=True, help_text='CK-MB (ug/L)', null=True)),
                ('ck', models.FloatField(blank=True, help_text='CK (ug/L)', null=True)),
                ('ctni', models.FloatField(blank=True, help_text='cTnI (ug/L)', null=True)),
                ('myo', models.FloatField(blank=True, help_text='MYo (ug/L)', null=True)),
                ('ldh', models.FloatField(blank=True, help_text='LDH (U/L)', null=True)),
                ('ast', models.FloatField(blank=True, help_text='AST (U/L)', null=True)),
                ('bnp', models.FloatField(blank=True, help_text='BNP (pg/ml)', null=True)),
                ('ntbnp', models.FloatField(blank=True, help_text='NT-BNP (pg/ml)', null=True)),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease')),
            ],
        ),
        migrations.CreateModel(
            name='CardiomyopathyTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drugs', models.JSONField(blank=True, default=dict, help_text='治疗情况', null=True)),
                ('treated', models.DateField(blank=True, help_text='治疗时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease')),
            ],
        ),
        migrations.CreateModel(
            name='CongenitalHeartDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.patient')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='DicomImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.FileField(max_length=200, upload_to='dicom/%Y/%m/')),
                ('fileuuid', models.CharField(max_length=50)),
                ('patient', models.CharField(blank=True, default='', max_length=50)),
                ('series', models.CharField(blank=True, default='', max_length=50)),
                ('study', models.CharField(blank=True, default='', max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CardiomyopathyUltrasound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', help_text='超声号', max_length=20)),
                ('age', models.FloatField(blank=True, help_text='年龄', null=True)),
                ('lvef', models.FloatField(blank=True, help_text='LVEF (%)', null=True)),
                ('lvfs', models.FloatField(blank=True, help_text='LVFS (%)', null=True)),
                ('la', models.FloatField(blank=True, help_text='LA (mm)', null=True)),
                ('lv', models.FloatField(blank=True, help_text='LV (mm)', null=True)),
                ('ra', models.FloatField(blank=True, help_text='RA (mm)', null=True)),
                ('rv', models.FloatField(blank=True, help_text='RV (mm)', null=True)),
                ('lvedd', models.FloatField(blank=True, help_text='LVEDD (mm)', null=True)),
                ('lvesd', models.FloatField(blank=True, help_text='LVESD (mm)', null=True)),
                ('diagnosis', models.TextField(blank=True, default='', help_text='超声诊断')),
                ('report', models.FileField(blank=True, help_text='报告', max_length=200, null=True, upload_to='report/%Y/%m/')),
                ('tested', models.DateField(blank=True, help_text='治疗时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease')),
                ('dicom', models.ForeignKey(blank=True, help_text='图像', null=True, on_delete=django.db.models.deletion.CASCADE, to='hdbase.dicomimage')),
            ],
        ),
        migrations.CreateModel(
            name='CardiomyopathyMRI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', help_text='超声号', max_length=20)),
                ('age', models.FloatField(blank=True, help_text='年龄', null=True)),
                ('lvef', models.FloatField(blank=True, help_text='LVEF (%)', null=True)),
                ('lvfs', models.FloatField(blank=True, help_text='LVFS (%)', null=True)),
                ('la', models.FloatField(blank=True, help_text='LA (mm)', null=True)),
                ('lv', models.FloatField(blank=True, help_text='LV (mm)', null=True)),
                ('ra', models.FloatField(blank=True, help_text='RA (mm)', null=True)),
                ('rv', models.FloatField(blank=True, help_text='RV (mm)', null=True)),
                ('mass', models.CharField(blank=True, default='', help_text='心室肌质量', max_length=10)),
                ('lge', models.PositiveSmallIntegerField(choices=[(0, '阴性'), (1, '阳性')], default=0)),
                ('perfusion', models.CharField(default='', help_text='首过灌注', max_length=50)),
                ('dema', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, help_text='心肌水肿')),
                ('fibrosis', models.CharField(blank=True, default='', help_text='心肌纤维化', max_length=50)),
                ('microcirculation', models.CharField(blank=True, default='', help_text='心肌微循环', max_length=50)),
                ('report', models.FileField(blank=True, help_text='报告', max_length=200, null=True, upload_to='report/%Y/%m/')),
                ('tested', models.DateField(blank=True, help_text='检验时间', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.cardiomyopathydisease')),
                ('dicom', models.ForeignKey(blank=True, help_text='图像', null=True, on_delete=django.db.models.deletion.CASCADE, to='hdbase.dicomimage')),
            ],
        ),
        migrations.CreateModel(
            name='KawasakiDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.patient')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='RadiofrequencyAblation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hdbase.patient')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
    ]
